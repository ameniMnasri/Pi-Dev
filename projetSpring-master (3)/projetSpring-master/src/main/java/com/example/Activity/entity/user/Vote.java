package com.example.Activity.entity.user;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.hibernate.annotations.CreationTimestamp;

import java.time.LocalDateTime;

/**
 * Represents a single vote (upvote or downvote) by a User on a Post or Comment.
 */
@Entity
// Add unique constraints to ensure a user can only vote once per post/comment
@Table(name = "votes", uniqueConstraints = {
        @UniqueConstraint(columnNames = {"user_id", "post_id"}),
        @UniqueConstraint(columnNames = {"user_id", "comment_id"})
})
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public class Vote {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private VoteType voteType; // UPVOTE or DOWNVOTE

    // Many votes can be cast by one user
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_id", nullable = false)
    private User user;

    // Many votes can belong to one post (nullable because a vote can be for a comment instead)
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "post_id", nullable = true)
    private Post post;

    // Many votes can belong to one comment (nullable because a vote can be for a post instead)
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "comment_id", nullable = true)
    private Comment comment;

    @CreationTimestamp
    @Column(nullable = false, updatable = false)
    private LocalDateTime createdAt;

    // --- Getters, Setters, Constructors (Generated by Lombok) ---

    // Custom constructor for Post votes
    public Vote(VoteType voteType, User user, Post post) {
        this.voteType = voteType;
        this.user = user;
        this.post = post;
        this.comment = null; // Ensure comment is null for post votes
    }

    // Custom constructor for Comment votes
    public Vote(VoteType voteType, User user, Comment comment) {
        this.voteType = voteType;
        this.user = user;
        this.comment = comment;
        this.post = null; // Ensure post is null for comment votes
    }
}

